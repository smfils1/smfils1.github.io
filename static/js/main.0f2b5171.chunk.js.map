{"version":3,"sources":["components/Info.js","components/Project/index.js","components/Experiences.js","components/Pages/Portfolio.js","components/Pages/index.js","components/Nav/TopNav/StartNav.js","redux/actions/layout.js","components/Contacts.js","components/Nav/TopNav/EndNav.js","components/Nav/TopNav/index.js","components/Nav/NavItem.js","components/Nav/SideNav/MainNavMenu.js","components/Nav/SideNav/index.js","components/Nav/index.js","App.js","redux/reducers/layout.js","redux/reducers/index.js","redux/store.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","width","display","flexDirection","color","padding","spacing","backgroundColor","grey","breakpoints","up","icon","margin","btn","alignSelf","background","title","Info","classes","className","Typography","variant","content","career","Email","email","School","education","LocationOn","location","Button","style","href","resume","flexWrap","paddingBottom","fontWeight","details","down","tag","border","marginLeft","borderRadius","tags","media","height","maxWidth","justifyContent","alignItems","VideoItem","video","src","frameBorder","allowFullScreen","Project","project","useState","showFullScreenButton","setFullScreenButton","startIndex","setStartIndex","map","type","original","thumbnail","renderItem","embedUrl","Tag","value","Grid","container","item","xs","sm","description","detail","i","key","technologies","tech","repo","application","renderFullscreenButton","onClick","isFullscreen","GallaryButton","aria-label","fontSize","onThumbnailClick","event","index","console","log","items","defaultImage","showThumbnails","showNav","lazyLoad","showIndex","showPlayButton","Experiences","projects","time","titleStyle","bubbleStyle","contentStyle","boxShadow","Divider","text","Portfolio","id","dangerouslySetInnerHTML","__html","landing","paddingTop","backgroundImage","profilePic2","backgroundSize","backgroundPosition","position","writer","intro","textShadow","marginBottom","mobile_info","info","bottom","right","HomePage","useTheme","isSmallScreen","useMediaQuery","only","drawerSize","useSelector","layout","inLandScapeMode","AboutMe","base","shortAboutMe","loop","forEach","push","steps","Infinity","fullName","clsx","toolbar","paddingRight","iconButton","StartNav","dispatch","useDispatch","Toolbar","gutters","IconButton","edge","Menu","Contacts","github","GitHub","linkedin","LinkedIn","paddingLeft","EndNav","grow","flexGrow","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","TopNav","AppBar","elevation","active","listItem","textAlign","link","textDecoration","cursor","NavItem","to","Item","ListItem","ListItemText","primary","smooth","img","mainNavLinks","profile","marginTop","lineHeight","subtitle","contacts","MainNavMenu","isMinScreenMd","handleItemClick","Profile","name","alt","profilePic1","List","flexShrink","whiteSpace","drawerOpen","enteringScreen","drawerClose","overflowX","navHead","mixins","SideNav","isMaxScreenSm","isDrawerOpen","Drawer","open","paper","flex","minHeight","overflow","NavBar","children","useEffect","payload","App","Nav","exact","path","render","props","initialState","layoutReducer","state","action","reducers","combineReducers","middleware","thunkMiddleware","promiseMiddleware","middlewareEnhancer","applyMiddleware","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.0f2b5171.chunk.js","sourcesContent":["import React from \"react\";\nimport { makeStyles, Typography, Button } from \"@material-ui/core/\";\nimport content from \"../content.json\";\nimport { grey } from \"@material-ui/core/colors\";\nimport { School, Email, LocationOn } from \"@material-ui/icons\";\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    color: \"white\",\n    padding: theme.spacing(2),\n    backgroundColor: grey[900],\n    [theme.breakpoints.up(\"sm\")]: {\n      width: 300,\n      backgroundColor: \"black\",\n    },\n  },\n  icon: {\n    margin: theme.spacing(0.5, 1),\n  },\n  btn: {\n    margin: theme.spacing(1),\n    alignSelf: \"center\",\n    backgroundColor: \"white\",\n    color: \"black\",\n    \"&:hover\": {\n      background: \"rgb(201, 163, 143)\",\n    },\n  },\n  title: {\n    color: grey[300],\n  },\n}));\n\nconst Info = () => {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <Typography variant=\"button\" className={classes.title}>\n        {content.career}\n      </Typography>\n      <div>\n        <Email className={classes.icon} />\n        <Typography variant=\"caption\" className={classes.title}>\n          {content.email}\n        </Typography>\n      </div>\n      <div>\n        <School className={classes.icon} />\n        <Typography variant=\"caption\" className={classes.title}>\n          {content.education}\n        </Typography>\n      </div>\n      <div>\n        <LocationOn className={classes.icon} />\n        <Typography variant=\"caption\" className={classes.title}>\n          {content.location}\n        </Typography>\n      </div>\n      <div className={classes.btn}>\n        <Button style={{ color: \"inherit\" }} href={content.resume}>\n          Resume\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default Info;\n","import React, { useState } from \"react\";\nimport { makeStyles, Typography, Button, Grid } from \"@material-ui/core/\";\nimport FullscreenIcon from \"@material-ui/icons/Fullscreen\";\nimport FullscreenExitIcon from \"@material-ui/icons/FullscreenExit\";\nimport ImageGallery from \"react-image-gallery\";\nimport \"react-image-gallery/styles/css/image-gallery.css\";\nimport \"./overrides.css\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    paddingBottom: theme.spacing(2),\n  },\n  title: {\n    paddingBottom: theme.spacing(1),\n    fontWeight: 600,\n  },\n  details: {\n    padding: theme.spacing(1, 0),\n    [theme.breakpoints.down(\"xs\")]: {\n      padding: theme.spacing(0),\n    },\n  },\n  tag: {\n    color: \"black\",\n    background: \"white\",\n    border: \"solid 2px rgb(201, 163, 143)\",\n    padding: theme.spacing(0.5, 1),\n    margin: theme.spacing(1),\n    marginLeft: theme.spacing(0),\n    display: \"inline\",\n  },\n  btn: {\n    borderRadius: 0,\n    color: \"white\",\n    background: \"black\",\n    margin: theme.spacing(1),\n    \"&:hover\": {\n      color: \"inherit\",\n      background: \"rgb(201, 163, 143)\",\n    },\n  },\n  tags: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    margin: theme.spacing(0, 1),\n  },\n  media: {\n    height: \"100%\",\n    maxWidth: 350,\n    padding: theme.spacing(2),\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n}));\n\nconst VideoItem = ({ video }) => {\n  return (\n    <div className=\"video-wrapper\">\n      <iframe\n        width=\"100%\"\n        title=\"video\"\n        src={video}\n        frameBorder=\"0\"\n        allowFullScreen\n      ></iframe>\n    </div>\n  );\n};\n\nconst Project = ({ project }) => {\n  const [showFullScreenButton, setFullScreenButton] = useState(true);\n  const [startIndex, setStartIndex] = useState(0);\n  const classes = useStyles();\n\n  const handleThumbClick = (event, index) => {\n    console.log(index);\n    if (project.media[index].type === \"image\") {\n      setFullScreenButton(true);\n    } else {\n      setFullScreenButton(false);\n    }\n    setStartIndex(index);\n  };\n\n  const media = project.media.map(({ type, src }) => {\n    if (type === \"image\") {\n      return {\n        original: src,\n        thumbnail: src,\n      };\n    } else {\n      return {\n        renderItem: () => <VideoItem video={src} />,\n\n        embedUrl: src,\n        thumbnail: \"https://via.placeholder.com/150?text=VIDEO\",\n      };\n    }\n  });\n  const Tag = ({ value }) => <div className={classes.tag}>{value}</div>;\n\n  return (\n    <div className={classes.root}>\n      <Grid container>\n        <Grid item xs={12} sm={8}>\n          {\" \"}\n          <div>\n            <Typography className={classes.title} variant=\"h4\">\n              {\" \"}\n              {project.title}\n            </Typography>\n            <Typography variant=\"body1\">\n              {\" \"}\n              <strong>{project.description}</strong>\n            </Typography>\n            <div className={classes.details}>\n              <ul>\n                {project.details.map((detail, i) => (\n                  <li key={i}>\n                    <Typography variant=\"body1\">{detail}</Typography>\n                  </li>\n                ))}\n              </ul>\n            </div>\n            <div>\n              <Typography variant=\"caption\">TECHNOLOGIES</Typography>\n              <div className={classes.tags}>\n                {project.technologies.map((tech, i) => (\n                  <Tag key={i} value={tech} />\n                ))}\n              </div>\n            </div>\n            <div>\n              <Button className={classes.btn} href={project.repo}>\n                Github Repo\n              </Button>\n              {project.application && (\n                <Button className={classes.btn} href={project.application}>\n                  Open Application\n                </Button>\n              )}\n            </div>\n          </div>\n        </Grid>\n        <Grid item xs={12} sm={4}>\n          <div className={classes.media}>\n            <ImageGallery\n              renderFullscreenButton={(onClick, isFullscreen) => {\n                const GallaryButton = () => (\n                  <button\n                    type=\"button\"\n                    className={`image-gallery-icon image-gallery-fullscreen-button${\n                      showFullScreenButton ? \" active\" : \"\"\n                    }`}\n                    onClick={onClick}\n                    aria-label=\"Open Fullscreen\"\n                  >\n                    {isFullscreen ? (\n                      <FullscreenExitIcon fontSize=\"large\" />\n                    ) : (\n                      <FullscreenIcon fontSize=\"large\" />\n                    )}\n                  </button>\n                );\n                if (showFullScreenButton) return <GallaryButton />;\n              }}\n              startIndex={startIndex}\n              onThumbnailClick={handleThumbClick}\n              items={media}\n              defaultImage={media[0]}\n              showThumbnails={true}\n              showNav={false}\n              lazyLoad={true}\n              showIndex={false}\n              showPlayButton={false}\n            />\n          </div>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default Project;\n","import React, { Fragment } from \"react\";\nimport { Divider } from \"@material-ui/core/\";\nimport { Timeline, TimelineEvent } from \"react-event-timeline\";\nimport Project from \"./Project\";\nimport content from \"../content.json\";\n\nconst Experiences = () => {\n  return (\n    <Timeline>\n      {content.projects.map((project, index) => {\n        return (\n          <Fragment key={index}>\n            <TimelineEvent\n              title={project.time}\n              titleStyle={{ color: \"rgb(168, 92, 47)\", fontSize: \"1.2em\" }}\n              bubbleStyle={{ border: \"solid 2px rgb(201, 163, 143)\" }}\n              contentStyle={{\n                backgroundColor: \"transparent\",\n                boxShadow: \"none\",\n              }}\n            >\n              <Project project={project} />\n              <Divider />\n            </TimelineEvent>\n          </Fragment>\n        );\n      })}\n    </Timeline>\n  );\n};\n\nexport default Experiences;\n","import React from \"react\";\nimport { makeStyles, Typography } from \"@material-ui/core/\";\nimport content from \"../../content.json\";\nimport { grey } from \"@material-ui/core/colors\";\n\nimport Experiences from \"../Experiences\";\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    padding: theme.spacing(4),\n    [theme.breakpoints.down(\"xs\")]: {\n      padding: theme.spacing(2),\n    },\n    backgroundColor: grey[100],\n  },\n  text: {\n    paddingBottom: theme.spacing(2),\n  },\n  description: {\n    padding: theme.spacing(0.5),\n    display: \"flex\",\n    color: \"white\",\n    backgroundColor: \"black\",\n  },\n}));\n\nconst Portfolio = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root} id=\"portfolio\">\n      <Typography className={classes.text} variant=\"h4\">\n        PORTFOLIO\n      </Typography>\n      <div className={classes.description}>\n        {\" \"}\n        <Typography\n          variant=\"body1\"\n          dangerouslySetInnerHTML={{ __html: content.description }}\n        />\n      </div>\n      <Experiences />\n    </div>\n  );\n};\n\nexport default Portfolio;\n","import React from \"react\";\nimport {\n  makeStyles,\n  Typography,\n  useTheme,\n  useMediaQuery,\n} from \"@material-ui/core/\";\nimport { useSelector } from \"react-redux\";\nimport content from \"../../content.json\";\nimport Info from \"../Info\";\nimport { grey } from \"@material-ui/core/colors\";\nimport clsx from \"clsx\";\nimport Typical from \"react-typical\";\n\nimport Portfolio from \"./Portfolio\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  landing: {\n    padding: theme.spacing(2),\n    paddingTop: theme.spacing(10),\n    height: \"100vh\",\n    width: \"100%\",\n    backgroundImage: `url(${content.profilePic2})`,\n    backgroundSize: \"cover\",\n    backgroundPosition: \"center\",\n    position: \"relative\",\n  },\n  writer: {\n    padding: theme.spacing(0.5),\n    color: \"white\",\n    backgroundColor: \"black\",\n    display: \"inline\",\n    fontSize: \"1.5em\",\n  },\n  content: {\n    margin: theme.spacing(2),\n  },\n  intro: {\n    fontWeight: 500,\n    color: \"white\",\n    textShadow: \"1px 1px 1px rgb(0, 0, 0)\",\n    marginBottom: theme.spacing(1),\n  },\n  mobile_info: {\n    padding: theme.spacing(4),\n    display: \"flex\",\n    justifyContent: \"center\",\n    backgroundColor: grey[300],\n  },\n  info: {\n    position: \"absolute\",\n    bottom: theme.spacing(4),\n    right: theme.spacing(4),\n  },\n}));\n\nconst HomePage = () => {\n  const classes = useStyles();\n  const theme = useTheme();\n  const isSmallScreen = useMediaQuery(theme.breakpoints.only(\"xs\"));\n  const drawerSize = useSelector(({ layout }) => layout.drawerSize);\n  const inLandScapeMode = useMediaQuery(\n    `(orientation: landscape) and (max-width: ${drawerSize + 900}px)`\n  );\n\n  const AboutMe = () => {\n    const base = content.shortAboutMe.base;\n    const writer = [];\n    content.shortAboutMe.loop.forEach((value) => {\n      writer.push(base, 150, base + value, 150);\n    });\n    return (\n      <Typical steps={writer} loop={Infinity} className={classes.writer} />\n    );\n  };\n  return (\n    <div className={classes.root} id=\"home\">\n      <div className={classes.landing}>\n        <div className={classes.content}>\n          <Typography className={classes.intro} variant=\"h3\">\n            I'm {content.fullName},\n          </Typography>\n          <AboutMe />\n        </div>\n      </div>\n      <div\n        className={clsx({\n          [classes.mobile_info]: isSmallScreen || inLandScapeMode,\n          [classes.info]: !(isSmallScreen || inLandScapeMode),\n        })}\n      >\n        <Info />\n      </div>\n      <Portfolio />\n    </div>\n  );\n};\n\nexport default HomePage;\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Toolbar, IconButton } from \"@material-ui/core\";\nimport { Menu as MenuIcon } from \"@material-ui/icons\";\n\nimport { toggleDrawer } from \"../../../redux/actions/layout\";\n\nconst useStyles = makeStyles((theme) => ({\n  toolbar: {\n    paddingRight: \"0px\",\n  },\n  iconButton: {\n    color: \"white\",\n  },\n}));\n\nconst StartNav = () => {\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  return (\n    <Toolbar\n      classes={{\n        gutters: classes.toolbar,\n      }}\n    >\n      <IconButton\n        aria-label=\"open drawer\"\n        edge=\"start\"\n        className={classes.iconButton}\n        onClick={() => dispatch(toggleDrawer())}\n      >\n        <MenuIcon />\n      </IconButton>\n    </Toolbar>\n  );\n};\n\nexport default StartNav;\n","const toggleDrawer = () => {\n  return {\n    type: \"TOGGLE_DRAWER\",\n  };\n};\n\nconst setDrawer = (drawerSize) => {\n  return {\n    type: \"SET_DRAWER\",\n    payload: { drawerSize },\n  };\n};\n\nexport { setDrawer, toggleDrawer };\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/\";\nimport { LinkedIn, Email, GitHub } from \"@material-ui/icons\";\n\nimport content from \"../content.json\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    margin: theme.spacing(2),\n  },\n  icon: {\n    margin: theme.spacing(0.5, 1),\n    color: \"white\",\n  },\n}));\n\nconst Contacts = () => {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <a href={\"mailto:\" + content.email}>\n        <Email className={classes.icon} />\n      </a>\n      <a href={\"https://github.com/\" + content.github}>\n        <GitHub className={classes.icon} />\n      </a>\n      <a href={\"https://www.linkedin.com/in/\" + content.linkedin}>\n        <LinkedIn className={classes.icon} />\n      </a>\n    </div>\n  );\n};\n\nexport default Contacts;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Toolbar } from \"@material-ui/core\";\n\nimport Contacts from \"../../Contacts\";\n\nconst useStyles = makeStyles((theme) => ({\n  toolbar: {\n    paddingLeft: \"0px\",\n  },\n}));\n\nconst EndNav = () => {\n  const classes = useStyles();\n\n  return (\n    <Toolbar\n      classes={{\n        gutters: classes.toolbar,\n      }}\n    >\n      <Contacts />\n    </Toolbar>\n  );\n};\n\nexport default EndNav;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { AppBar } from \"@material-ui/core\";\nimport StartNav from \"./StartNav\";\nimport EndNav from \"./EndNav\";\n\nconst useStyles = makeStyles((theme) => ({\n  grow: {\n    flexGrow: 1,\n  },\n  appBar: {\n    backgroundColor: \"black\",\n    display: \"flex\",\n    flexDirection: \"row\",\n\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create([\"margin\", \"width\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n}));\n\nconst TopNav = () => {\n  const classes = useStyles();\n\n  return (\n    <div>\n      {/* <CssBaseline /> */}\n      <AppBar elevation={0} position=\"fixed\" className={classes.appBar}>\n        <StartNav />\n        <div className={classes.grow} />\n\n        <EndNav />\n      </AppBar>\n    </div>\n  );\n};\n\nexport default TopNav;\n","import React from \"react\";\nimport { Link } from \"react-scroll\";\nimport { ListItem, ListItemText } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { grey } from \"@material-ui/core/colors\";\n\nconst useStyles = makeStyles((theme) => ({\n  active: {\n    backgroundColor: grey[300],\n    \"&:hover\": { backgroundColor: grey[400] },\n  },\n  icon: {\n    padding: theme.spacing(0, 1),\n  },\n  listItem: {\n    textAlign: \"center\",\n  },\n  link: {\n    color: \"inherit\",\n  },\n  text: {\n    fontSize: \"1.3em\",\n    fontWeight: 100,\n    \"&:hover\": {\n      textDecoration: \"underline\",\n    },\n    cursor: \"pointer\",\n  },\n}));\n\nconst NavItem = ({ to, title, onClick }) => {\n  const classes = useStyles();\n  const Item = (\n    <ListItem className={classes.listItem} onClick={onClick}>\n      <ListItemText primary={title} classes={{ primary: classes.text }} />\n    </ListItem>\n  );\n\n  return to ? (\n    <Link to={to} smooth={true} duration={1000} className={classes.link}>\n      {Item}\n    </Link>\n  ) : (\n    <> {Item} </>\n  );\n};\n\nexport default NavItem;\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { grey } from \"@material-ui/core/colors\";\nimport clsx from \"clsx\";\nimport {\n  List,\n  makeStyles,\n  useMediaQuery,\n  useTheme,\n  Typography,\n} from \"@material-ui/core\";\n\nimport NavItem from \"../NavItem\";\nimport Contacts from \"../../Contacts\";\nimport { toggleDrawer } from \"../../../redux/actions/layout\";\nimport content from \"../../../content.json\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  img: {\n    width: 110,\n    height: 110,\n    borderRadius: \"50%\",\n  },\n  mainNavLinks: {\n    height: \"30%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n  },\n  profile: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  title: {\n    marginTop: theme.spacing(2),\n    fontWeight: 700,\n    lineHeight: \"1em\",\n  },\n  subtitle: {\n    color: grey[500],\n  },\n  contacts: {\n    alignSelf: \"center\",\n  },\n  grow: {\n    flexGrow: 1,\n  },\n}));\n\nconst MainNavMenu = () => {\n  const theme = useTheme();\n  const classes = useStyles();\n  const isMinScreenMd = useMediaQuery(theme.breakpoints.up(\"md\"));\n  const dispatch = useDispatch();\n  const handleItemClick = () => {\n    if (!isMinScreenMd) {\n      dispatch(toggleDrawer());\n    }\n  };\n\n  const Profile = ({ name, career }) => (\n    <div className={classes.profile}>\n      <img alt=\"profile\" className={classes.img} src={content.profilePic1} />\n      <Typography variant=\"h5\" className={classes.title}>\n        {name}\n      </Typography>\n      <Typography variant=\"button\" className={clsx(classes.subtitle)}>\n        {career}\n      </Typography>\n    </div>\n  );\n\n  return (\n    <List className={classes.root}>\n      <Profile name={content.fullName} career={content.career} />\n      <div className={classes.mainNavLinks}>\n        <NavItem to=\"home\" title=\"Home\" onClick={handleItemClick} />{\" \"}\n        <NavItem to=\"portfolio\" title=\"Portfolio\" onClick={handleItemClick} />\n      </div>\n      <div className={classes.grow} />\n      <div className={classes.contacts}>\n        <Contacts />\n      </div>\n    </List>\n  );\n};\n\nexport default MainNavMenu;\n","import React from \"react\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport { useSelector } from \"react-redux\";\nimport clsx from \"clsx\";\nimport { Drawer, useMediaQuery } from \"@material-ui/core\";\nimport MainNavMenu from \"./MainNavMenu\";\nimport StartNav from \"../TopNav/StartNav\";\n\nconst drawerWidth = 300;\nconst useStyles = makeStyles((theme) => ({\n  drawer: {\n    backgroundColor: \"black\",\n    color: \"white\",\n    width: drawerWidth,\n    flexShrink: 0,\n    whiteSpace: \"nowrap\",\n  },\n  drawerOpen: {\n    width: drawerWidth,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerClose: {\n    transition: theme.transitions.create([\"width\", \"margin\", \"visibility\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    overflowX: \"hidden\",\n    width: 0,\n  },\n  navHead: {\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n  },\n}));\n\nconst SideNav = () => {\n  const theme = useTheme();\n  const isMaxScreenSm = useMediaQuery(theme.breakpoints.down(\"sm\"));\n  const isDrawerOpen = useSelector(({ layout }) => layout.drawerSize) !== 0;\n  const classes = useStyles();\n  return (\n    <Drawer\n      variant={isMaxScreenSm ? \"temporary\" : \"persistent\"}\n      open={isDrawerOpen}\n      className={clsx(classes.drawer, {\n        [classes.drawerOpen]: isDrawerOpen,\n        [classes.drawerClose]: !isDrawerOpen,\n      })}\n      classes={{\n        paper: clsx(classes.drawer, {\n          [classes.drawerOpen]: isDrawerOpen,\n          [classes.drawerClose]: !isDrawerOpen,\n        }),\n      }}\n    >\n      <div className={classes.navHead}>{isMaxScreenSm && <StartNav />}</div>\n      <MainNavMenu />\n    </Drawer>\n  );\n};\n\nexport default SideNav;\n","import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { makeStyles, useMediaQuery, useTheme } from \"@material-ui/core\";\nimport clsx from \"clsx\";\n\nimport TopNav from \"./TopNav\";\nimport SideNav from \"./SideNav\";\nimport { setDrawer } from \"../../redux/actions/layout\";\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  content: {\n    flex: 1,\n    display: \"flex\",\n    flexDirection: \"column\",\n    minHeight: \"100vh\",\n    overflow: \"hidden\",\n  },\n  toolbar: {\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n  },\n}));\nconst NavBar = ({ children }) => {\n  const classes = useStyles();\n  const theme = useTheme();\n  const dispatch = useDispatch();\n  const isMaxScreenSm = useMediaQuery(theme.breakpoints.down(\"sm\"));\n  const isDrawerOpen = useSelector(({ layout }) => layout.drawerSize) !== 0;\n\n  useEffect(() => {\n    if (isMaxScreenSm !== null) dispatch(setDrawer(isMaxScreenSm ? 0 : 300));\n  }, [isMaxScreenSm]);\n\n  return (\n    <div className={classes.root}>\n      {isMaxScreenSm && !isDrawerOpen && <TopNav />}\n      <SideNav />\n      <div className={classes.content}>\n        <div className={clsx({ [classes.toolbar]: isMaxScreenSm })} />\n        {children}\n      </div>\n    </div>\n  );\n};\n\nexport default NavBar;\n","import React from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport Home from \"./components/Pages\";\nimport Nav from \"./components/Nav\";\n\nfunction App() {\n  return (\n    <div>\n      <Nav>\n        <Switch>\n          <Route exact path=\"/\" render={(props) => <Home {...props} />} />\n          <Route render={() => <Redirect to=\"/\" />} />\n        </Switch>\n      </Nav>\n    </div>\n  );\n}\n\nexport default App;\n","const initialState = {\n  drawerSize: 0,\n};\n\nconst layoutReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"TOGGLE_DRAWER\":\n      return { ...state, drawerSize: state.drawerSize === 0 ? 300 : 0 };\n    case \"SET_DRAWER\":\n      return { ...state, ...action.payload };\n    default:\n      return state;\n  }\n};\nexport default layoutReducer;\n","import { combineReducers } from \"redux\";\nimport layout from \"./layout\";\n\nconst reducers = combineReducers({\n  layout,\n});\n\nexport default reducers;\n","import { applyMiddleware, createStore, compose } from \"redux\";\nimport thunkMiddleware from \"redux-thunk\";\nimport reducers from \"./reducers\";\nimport promiseMiddleware from \"redux-promise\";\nimport logger from \"redux-logger\";\n\nlet middleware = [thunkMiddleware, promiseMiddleware];\nif (process.env.NODE_ENV === \"development\") {\n  middleware = [...middleware, logger];\n}\n\nconst middlewareEnhancer = applyMiddleware(...middleware);\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducers, composeEnhancers(middlewareEnhancer));\n\nexport default store;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { HashRouter as Router } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}